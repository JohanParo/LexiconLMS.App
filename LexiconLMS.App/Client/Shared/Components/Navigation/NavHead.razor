@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@inject NavigationManager Navigation

<header class="lms-header py-3" id="lms-header" @ref="exampleInput">
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container">
            <NavLink class="navbar-brand" href="" Match="NavLinkMatch.All">
                @Title
            </NavLink>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon text-primary oi oi-menu"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item"><NavLink class="nav-link" href="" Match="NavLinkMatch.All">Home</NavLink></li>
                    <AuthorizeView>
                    <li class="nav-item"><NavLink class="nav-link" href="people">People</NavLink></li>
                    <li class="nav-item"><NavLink class="nav-link" href="week">Week</NavLink></li>
                    </AuthorizeView>
                    @*Roles="Admin"*@
                    <AuthorizeView>
                        <li class="nav-item"><NavLink class="nav-link" href="courses">Courses</NavLink></li>
                        <li class="nav-item"><NavLink class="nav-link" href="#">Files</NavLink></li>
                        <li class="nav-item"><NavLink class="nav-link" href="#">Users</NavLink></li>

                    </AuthorizeView>
                </ul>
                <form class="d-flex gap-2" role="search">
                    <AuthorizeView>
                        <select class="form-select" aria-label="Create new" @onchange="HandleOptionChange">
                            <option selected>Create</option>
                            <option value="1">User</option>
                            <option value="2">Course</option>
                            <option value="3">Module</option>
                            <option value="4">Activity</option>
                        </select>

                    </AuthorizeView>
                    <input class="form-control" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-primary" type="submit">Search</button>
                </form>
                <AuthorizeView>
                    <Authorized>
                        <div class="dropdown text-end ps-4">
                            <a href="#" class="d-block link-dark text-decoration-none dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                <img src="@(context.User.FindFirst("Avatar")?.Value ?? "https://www.w3schools.com/w3images/avatar5.png")" alt="mdo" width="32" height="32" class="rounded-circle">
                            </a>
                            <ul class="dropdown-menu text-small" style="position: absolute; inset: 0px 0px auto auto; margin: 0px; transform: translate(0px, 34px);">
                                <li><a class="dropdown-item" href="authentication/profile">Hello, @context.User.FindFirst("FullName")?.Value @context.User.Identity?.Name</a></li>
                                @*<li><a class="dropdown-item" href="authentication/profile">@context.User.FindFirst("CourseId")?.Value</a></li>*@
                                <li><a class="dropdown-item" href="#">Settings</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" @onclick="BeginLogOut">Log out</a></li>
                            </ul>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div class="px-4 auth"><LoginDisplay /></div>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </nav>
</header>

@if (showModal)
{
    <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Confirm action</h4>
                    <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    @switch (showForm)
                    {
                    case "Activity":
                    <CreateActivityForm></CreateActivityForm>
                    break;
                    case "Module":
                    <CreateModuleForm></CreateModuleForm>
                    break;
                    case "Course":
                    <CreateCourseForm></CreateCourseForm>
                    break;
                    default:
                    break;
                    }
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn" @onclick="@ModalCancel">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick=@ModalOk>Delete</button>
                </div>

            </div>
        </div>
    </div>
}


<button onclick="topFunction()" style="display:none;" id="upBtn">Up</button>
@code {
    private string showForm;
    bool showModal = false;

    void ModalCancel() => showModal = false;
    void ModalOk()
    {
        Console.WriteLine("Modal ok");
        showModal = false;
    }
    void ModalShow()
    {
        showModal = true;
    }

    [Parameter]
    public string? Title { get; set; }


    private void BeginLogOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }
    private ElementReference exampleInput;
    private async Task ChangeFocus()
    {
        await exampleInput.FocusAsync();
    }

    private void HandleOptionChange(ChangeEventArgs e)
    {
        if (e.Value.ToString() == "4")
        {
            ModalShow();
            showForm = "Activity";
        }
        else if (e.Value.ToString() == "3")
        {
            ModalShow();
            showForm = "Module";
        }
        else if (e.Value.ToString() == "2")
        {
            ModalShow();
            showForm = "Course";
        }
        else
        {
            ModalCancel();
            showForm = null;
        }
    }

}
